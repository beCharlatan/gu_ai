# 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел и
# строк и сохраните в переменные, выведите на экран.
a = 'Artyom'
b = 3.14
c = input('Как дела? ')
d = int(input('Введите целое число: '))

print(a, type(a))
print(b, type(b))
print(c, type(c))
print(d, type(d))

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.
time = int(input('Введите количество секунд: '))
hours = time // 3600
time %= 3600
minutes = time // 60
seconds = time % 60

print("%d:%02d:%02d" % (hours, minutes, seconds))

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3
# + 33 + 333 = 369.
n = input('Введите целое число: ')
ns = int(n) + int(n*2) + int(n*3)
print(ns, ' = n + nn + nnn')

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл
# while и арифметические операции.
n = list(input('Введите положительное целое число: '))
max_n = n[0]
n_set = set(n)
while len(n) > 0:
    i = n.pop()
    if i > max_n:
        max_n = i
print(max_n, 'max digit')

# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает
# фирма (прибыль — выручка больше издержек, или убыток — издержки больше выручки). Выведите соответствующее
# сообщение. Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.
revenue = int(input('Введите значение выручки: '))
cost = int(input('Введите значение издержек: '))

if revenue >= cost:
    print('прибыль')
    profit = revenue - cost
    profitability = profit / revenue
    print(profitability, ' - значение рентабельности')
    amount_of_staff = int(input('Сколько сотрудников в вашей компании?: '))
    print(profit / amount_of_staff, ' - прибыль в расчёте на одного сотрудника')
else:
    print('убыток')


# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день
# спортсмен увеличивал результат на 10 % относительно предыдущего. Требуется определить номер дня, на который общий
# результат спортсмена составить не менее b километров. Программа должна принимать значения параметров a и b и
# выводить одно натуральное число — номер дня.
def get_day(start, expected):
    days = 1
    while start <= expected:
        start = start + start * 0.1
        days += 1
    return days


print(get_day(2, 3))
