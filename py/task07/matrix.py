# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы. Подсказка: матрица — система некоторых математических
# величин, расположенных в виде прямоугольной схемы. Примеры матриц вы найдете в методичке. Следующий шаг —
# реализовать перегрузку метода __str__() для вывода матрицы в привычном виде. Далее реализовать перегрузку метода
# __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна
# быть новая матрица. Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
# первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]


def add_matrix(x, y):
    # Метод через зип, вначале приводим к паре соответствующие строки, потом приводим к паре соответствующие элементы
    # в строке и суммируем
    return [list(map(sum, zip(*i))) for i in zip(x, y)]


class Matrix:
    def __init__(self, data):
        self.data = data

    def __str__(self):
        output = '\n'
        for i in range(len(self.data)):
            for j in range(len(self.data[i])):
                # для ровненьких столбцов
                # для небольших значений в матрицах (до 3-х знаков) сойдёт
                output += "{:4d}".format(self.data[i][j])

            output += '\n'

        output += '\n'
        return output

    def __add__(self, other):
        result = add_matrix(self.data, other.data)
        return Matrix(result)


m = Matrix(a)
print(m)
m1 = Matrix(a)
m2 = m + m1
print(m2)
